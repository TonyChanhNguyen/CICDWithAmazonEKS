[
{
	"uri": "/vi/",
	"title": "Bộ lưu trữ cố định trong Amazon EKS",
	"tags": [],
	"description": "",
	"content": "Bộ lưu trữ trong Amazon EKS Tổng quan Bài thực hành này sẽ cung cấp một cái nhìn chi tiết về cách làm thế nào để tích hợp hai dịch vụ lưu trữ của AWS như là bộ lưu trữ cố định với EKS Cluster của bạn (Amazon EBS và Amazon EFS)\nNội dung  Giới thiệu Các bước chuẩn bị Bộ lưu trữ cố định Amazon EKS với Amazon EBS Bộ lưu trữ cố định Amazon EKS với Amazon EFS Dọn dẹp tài nguyên  "
},
{
	"uri": "/vi/3-eksstoragewithebs/3.1-installcsidriver/",
	"title": "Cài đặt Amazon EBS CSI Driver",
	"tags": [],
	"description": "",
	"content": "Amazon Elastic Block Store (Amazon EBS) Container Storage Interface (CSI) driver quản lý vòng đời của các ổ đĩa Amazon EBS dưới dạng bộ lưu trữ cho các ổ đĩa Kubernetes mà bạn tạo. Amazon EBS CSI driver tạo các ổ đĩa Amazon EBS cho các loại ổ đĩa Kubernetes sau: ổ đĩa tạm thời và ổ đĩa cố định.\nTạo IAM Policy Amazon EBS CSI plugin yêu cầu quyền IAM để gọi đến AWS APIs.\n  Đi đến IAM.\n  Chọn mục Policies.\n  Chọn Create policy.   Tại mục Policy editor, chọn JSON.\n  Sau đó, dán đoạn JSON dưới đây.\n  {\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;ec2:AttachVolume\u0026#34;,\r\u0026#34;ec2:CreateSnapshot\u0026#34;,\r\u0026#34;ec2:CreateTags\u0026#34;,\r\u0026#34;ec2:CreateVolume\u0026#34;,\r\u0026#34;ec2:DeleteSnapshot\u0026#34;,\r\u0026#34;ec2:DeleteTags\u0026#34;,\r\u0026#34;ec2:DeleteVolume\u0026#34;,\r\u0026#34;ec2:DescribeInstances\u0026#34;,\r\u0026#34;ec2:DescribeSnapshots\u0026#34;,\r\u0026#34;ec2:DescribeTags\u0026#34;,\r\u0026#34;ec2:DescribeVolumes\u0026#34;,\r\u0026#34;ec2:DetachVolume\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34;\r}\r]\r}  Sau đó, nhấn Next.   Nhập Amazon_EBS_CSI_Driver là Policy name.\n  Nhập Policy for EC2 Instances to access Elastic Block Store là Description - optional.\n  Nhấn Create policy.   Liệt kê IAM role Worker Nodes đang sử dụng  Tại cửa sổ lệnh Cloud9, sử dụng câu lệnh bên dưới để tìm tên của IAM role mà Worker Nodes đang sử dụng.  kubectl -n kube-system describe configmap aws-auth Kiếm tra giá trị của rolearn để tìm kiếm tên của IAM Role. Ví dụ: Trong trường hợp này, tên IAM Role là eksctl-fcj-storage-cluster-nodegro-NodeInstanceRole-dN18fcwv9euu.\nLiên kết policy vào IAM Role   Đi đến IAM Role.\n  Tại tính năng Search, nhập tên IAM Role vừa tìm thấy.\n  Nhấn vào nó.   Nhấn Attach policies của tính năng Add permissions.   Tìm kiếm policy tên Amazon_EBS_CSI_Driver.\n  Chọn kết quả tìm được.\n  Nhấn Add permissions.   Triển khai Amazon EBS CSI Driver  Tại cửa sổ lệnh Cloud9, thực thi câu lệnh bên dưới.  kubectl apply -k \u0026#34;github.com/kubernetes-sigs/aws-ebs-csi-driver/deploy/kubernetes/overlays/stable/?ref=master\u0026#34; Kiểm tra kết quả. Đảm bảo có pod tên ebs-csi đang chạy ở namespace kube-system.  kubectl get pods -n kube-system Bạn đã cài đặt Amazon EBS CSI Driver thành công, chuyển đến bước tiếp theo để tìm hiểu làm thế nào để sử dụng Amazon EBS CSI Driver để triển khai bộ lưu trữ EBS cho Amazon EKS Cluster. "
},
{
	"uri": "/vi/4-eksstoragewithefs/4.1-installecsidriver/",
	"title": "Cài đặt Amazon EFS CSI Driver",
	"tags": [],
	"description": "",
	"content": "Tạo IAM Role Amazon EFS CSI driver yêu cầu quyền IAM để tương tác với hệ thống tệp của bạn. Tạo vai trò IAM và đính kèm chính sách được quản lý AWS cần thiết vào vai trò đó.\n Tại cửa sổ lệnh Cloud9, thực thi câu lệnh dưới đây để tạo IAM role.  export cluster_name=fcj-storage-cluster\rexport role_name=AmazonEKS_EFS_CSI_DriverRole\reksctl create iamserviceaccount \\\r--name efs-csi-controller-sa \\\r--namespace kube-system \\\r--cluster $cluster_name \\\r--region ap-southeast-1 \\\r--role-name $role_name \\\r--attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEFSCSIDriverPolicy \\\r--override-existing-serviceaccounts \\\r--approve\rTRUST_POLICY=$(aws iam get-role --role-name $role_name --query \u0026#39;Role.AssumeRolePolicyDocument\u0026#39; | \\\rsed -e \u0026#39;s/efs-csi-controller-sa/efs-csi-*/\u0026#39; -e \u0026#39;s/StringEquals/StringLike/\u0026#39;)\raws iam update-assume-role-policy --role-name $role_name --policy-document \u0026#34;$TRUST_POLICY\u0026#34; Xác minh Service Account đã tạo.\nThực thi câu lệnh dưới để kiểm tra Service Account tên efs-csi-controller-sa trong namespace kube-system.  kubectl get sa efs-csi-controller-sa -n kube-system Xác minh IAM Role đã tạo.\n Đi đến IAM Role.\n  Nhập tên IAM Role AmazonEKS_EFS_CSI_DriverRole tại tính năng Search.\n  Nhấn IAM Role AmazonEKS_EFS_CSI_DriverRole.   Có một Policy tên AmazonEFSCSIDriverPolicy được gắn vào IAM Role.   Chuyển đến thanh điều hướng Trust replationships.\n  Xác minh rằng có một điều kiện với giá trị system:serviceaccount:kube-system:efs-csi-.   Cài đặt Amazon EFS CSI driver  Kiểm tra phiên bản của Cluster.  kubectl version Phiên bản của Cluster là Server Version (1.29 không phải 1.29.3). 2. Kiểm tra các tên của tiện ích bổ sung khả dụng cho phiên bản Cluster.\neksctl utils describe-addon-versions --region=ap-southeast-1 --kubernetes-version 1.29 | grep AddonName Xác định các tiện ích bổ sung hiện tại và phiên bản tiện ích bổ sung được cài đặt trên cụm của bạn.  eksctl get addon --cluster fcj-storage-cluster --region ap-southeast-1 Lấy Service Account Role ARN của efs-csi-controller-sa service account.  kubectl describe sa efs-csi-controller-sa -n kube-system Lưu giá trị của eks.amazonaws.com/role-arn ở mục Annotations.  Tạo một tiện ích bổ sung Amazon EKS. Thay thế các giá trị cụ thể trong câu lệnh eksctl create addon \u0026ndash;cluster \u0026lt;REPLACE_CLUSTER_NAME\u0026gt; \u0026ndash;name \u0026lt;REPLACE_ADDON_NAME\u0026gt; \u0026ndash;region \u0026lt;REPLACE_REGION_ID\u0026gt; \u0026ndash;version latest \u0026ndash;service-account-role-arn \u0026lt;REPLACE_IAM_ROLE_ARN\u0026gt; \u0026ndash;force. Sau đó tiến hành thực thi.  eksctl create addon --cluster fcj-storage-cluster --name aws-efs-csi-driver --region ap-southeast-1 --version latest \\\r--service-account-role-arn arn:aws:iam::170074558790:role/AmazonEKS_EFS_CSI_DriverRole --force Xác định lại các tiện ích bổ sung hiện tại và phiên bản của tiện ích bổ sung đã được cài đặt bên trong Cluster.  eksctl get addon --cluster fcj-storage-cluster --region ap-southeast-1 "
},
{
	"uri": "/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Trước khi tiến hành phần thực hành, dưới đây là tổng quan 2 loại dịch vụ mà chúng ta sẽ sử dụng và tích hợp với EKS:\n Amazon Elastic Block Store (chỉ hổ trợ EC2): dịch vụ lưu trữ khối cung cấp quyền truy cập trực tiếp từ các phiên bản và bộ chứa EC2 vào ổ lưu trữ chuyên dụng được thiết kế cho cả khối lượng công việc thông lượng và khối lượng giao dịch chuyên sâu ở mọi quy mô. Amazon Elastic File System (hổ trợ Fargate và EC2): một hệ thống tệp linh hoạt, có thể mở rộng và được quản lý đầy đủ, rất phù hợp để phân tích dữ liệu lớn, phân phối web và quản lý nội dung, phát triển và thử nghiệm ứng dụng, quy trình làm việc về phương tiện và giải trí, sao lưu cơ sở dữ liệu và lưu trữ vùng chứa. EFS lưu trữ dữ liệu của bạn một cách dư thừa trên nhiều Vùng sẵn sàng (AZ) và cung cấp quyền truy cập có độ trễ thấp từ các nhóm Kubernetes bất kể AZ mà chúng đang chạy trong đó.  Hai loai dịch vụ dưới đây không nằm trong phạm vi của bài thực hành này.\n Amazon FSx for NetApp ONTAP (chỉ hổ trợ EC2): Bộ nhớ chia sẻ được quản lý hoàn toàn được xây dựng trên hệ thống tệp ONTAP phổ biến của NetApp. FSx cho NetApp ONTAP lưu trữ dữ liệu của bạn một cách dự phòng trên nhiều Vùng sẵn sàng (AZ) và cung cấp quyền truy cập có độ trễ thấp từ các nhóm Kubernetes bất kể AZ mà chúng đang chạy trong đó. FSx for Lustre (chỉ hổ trợ EC2): một hệ thống tệp hiệu suất cao, được quản lý hoàn toàn, được tối ưu hóa cho các khối lượng công việc như học máy, điện toán hiệu suất cao, xử lý video, lập mô hình tài chính, tự động hóa thiết kế điện tử và phân tích. Với FSx for Lustre, bạn có thể nhanh chóng tạo một hệ thống tệp hiệu suất cao được liên kết với kho lưu trữ dữ liệu S3 của mình và truy cập một cách minh bạch các đối tượng S3 dưới dạng tệp. Amazon Simple Storage Service (chỉ hổ trợ EC2): là một dịch vụ lưu trữ đối tượng cung cấp khả năng mở rộng, tính khả dụng của dữ liệu, bảo mật và hiệu suất hàng đầu trong ngành. Khách hàng thuộc mọi quy mô và ngành nghề có thể lưu trữ và bảo vệ bất kỳ lượng dữ liệu nào cho hầu hết mọi trường hợp sử dụng, chẳng hạn như hồ dữ liệu, ứng dụng gốc trên nền tảng đám mây và ứng dụng di động. Với các lớp lưu trữ tiết kiệm chi phí và các tính năng quản lý dễ sử dụng, bạn có thể tối ưu hóa chi phí, sắp xếp dữ liệu và định cấu hình các biện pháp kiểm soát truy cập tinh chỉnh để đáp ứng các yêu cầu cụ thể về kinh doanh, tổ chức và tuân thủ.  Việc làm quen với một số khái niệm về Bộ lưu trữ Kubernetes cũng rất quan trọng:\n Volumes: Các tệp trên đĩa trong vùng chứa là tạm thời, điều này gây ra một số vấn đề đối với các ứng dụng không tầm thường khi chạy trong vùng chứa. Một vấn đề là mất tập tin khi vùng chứa gặp sự cố. Kubelet khởi động lại container nhưng ở trạng thái sạch. Sự cố thứ hai xảy ra khi chia sẻ tệp giữa các vùng chứa chạy cùng nhau trong Pod. Sự trừu tượng hóa khối lượng Kubernetes giải quyết cả hai vấn đề này. Nên làm quen với Pods. Ephemeral Volumes được thiết kế cho những trường hợp sử dụng này. Vì các tập tuân theo vòng đời của Pod và được tạo và xóa cùng với Pod, nên các Pod có thể bị dừng và khởi động lại mà không bị giới hạn ở nơi có sẵn một số ổ đĩa cố định. Persistent Volumes (PV) là một phần lưu trữ trong cụm được quản trị viên cấp phép hoặc được cấp phép động bằng Lớp lưu trữ. Đó là tài nguyên trong cụm giống như nút là tài nguyên cụm. PV là các plugin âm lượng giống như Volume, nhưng có vòng đời độc lập với bất kỳ Pod riêng lẻ nào sử dụng PV. Đối tượng API này nắm bắt các chi tiết về việc triển khai bộ lưu trữ, có thể là NFS, iSCSI hoặc hệ thống lưu trữ dành riêng cho nhà cung cấp đám mây. Persistent Volume Claim (PVC) là yêu cầu lưu trữ của người dùng. Nó tương tự như Pod. Các nhóm tiêu thụ tài nguyên nút và PVC tiêu thụ tài nguyên PV. Các nhóm có thể yêu cầu các mức tài nguyên cụ thể (CPU và Bộ nhớ). Các xác nhận quyền sở hữu có thể yêu cầu kích thước và chế độ truy cập cụ thể (ví dụ: chúng có thể được gắn ReadWriteOnce, ReadOnlyMany hoặc ReadWriteMany. Storage Classes cung cấp một cách để quản trị viên mô tả \u0026ldquo;loại\u0026rdquo; bộ nhớ mà họ cung cấp. Các lớp khác nhau có thể ánh xạ tới các mức chất lượng dịch vụ hoặc tới các chính sách dự phòng hoặc tới các chính sách tùy ý được xác định bởi quản trị viên cụm. Bản thân Kubernetes không có ý kiến ​​gì về những gì các lớp đại diện. Khái niệm này đôi khi được gọi là \u0026ldquo;hồ sơ\u0026rdquo; trong các hệ thống lưu trữ khác. Dynamic Volume Việc cung cấp cho phép khối lượng lưu trữ được tạo theo yêu cầu. Nếu không cung cấp động, quản trị viên cụm phải thực hiện lệnh gọi thủ công đến nhà cung cấp dịch vụ lưu trữ hoặc đám mây của họ để tạo khối lượng lưu trữ mới, sau đó tạo các đối tượng PersistentVolume để thể hiện chúng trong Kubernetes. Tính năng cung cấp động giúp loại bỏ nhu cầu quản trị viên cụm phải cung cấp trước bộ nhớ. Thay vào đó, nó tự động cung cấp dung lượng lưu trữ khi người dùng yêu cầu.  Trong hội thảo này, chúng tôi sẽ chỉ tập trung vào cách tích hợp bộ lưu trữ cố định trên Cụm EKS với Amazon EBS và Amazon EFS bằng Cung cấp tĩnh và Cung cấp động.\n"
},
{
	"uri": "/vi/2-prerequiste/2.1-createcloud9workspace/",
	"title": "Tạo môi trường làm việc Cloud9",
	"tags": [],
	"description": "",
	"content": "Tạo môi trường làm việc Cloud9   Đi đến Cloud9 tại vùng ap-southeast-1.\n  Nhấn Create environment.   Tại trang Create environment, nhập FCJ-Workspace tại Name.\n  Nhập Workspace for hands on workshop tại Description.\n  Ở mục Environment type, giữ mặc định New EC2 instance.\n  Ở mục Instance type, chọn Additional instance types.\n  Ở mục Additional instance types, chọn t3.large.   Cuộn xuống cuối trang và nhấn Create.   Máy chủ làm việc đang được tạo.   Mất khoảng 2 phút để máy chủ tạo thành công.\n  Sau khi máy chủ tạo thành công, nhấn Open để bắt đầu.   "
},
{
	"uri": "/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Tổng quan Để tiến hành bài lab này, chúng ta phải chuẩn bị một máy chủ làm việc Cloud9 và tạo IAM Role cho máy chủ đó.\nNội dung  2.1 Tạo môi trường Cloud9 2.2 Cấu hình IAM Role 2.3 Cài đặt công cụ 2.4 Tạo Amazon EKS Cluster  "
},
{
	"uri": "/vi/3-eksstoragewithebs/3.2-staticprovision/",
	"title": "Cung cấp tĩnh",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ thực hành làm thế nào để tạo và tiêu thụ một PersistentVolume từ một ổ đĩa EBS được tạo sẵn với cung cấp tĩnh.\nKiểm tra Availability Zone của Node Đầu tiên, chúng ta cần kiểm tra Availability Zone nào mà EC2 Managed Node Group Instance đang hoạt động.\n Đi đến EC2 Instances. Kiểm tra Availability Zone của nó.   Ở trường hợp này Availability Zone của Node là ap-southeast-1b, vì thế EBS Volume sẽ được tạo tại ap-southeast-1b.\nTạo một ổ đĩa EBS  Đi đến EBS Volumes. Bạn sẽ thấy hiện đang có 2 ổ đĩa: ổ đĩa mặc định của Cloud9 và ổ đĩa mặc định của NodeGroup.   Nhấn Create volume để tạo ổ đĩa mới.   Thay thế thành 20 tại Size (GiB).\n  Đặt Availability Zone là Availability Zone của Node. Trong trường hợp này là ap-southeast-1b.   Scroll down to the end of page and click on Create volume.   Chỉnh sửa Name của ổ đĩa EBS vừa tạo fcj-ebs-strorage-eks.   Lưu lại Volume ID để sử dụng sau.   Tạo các tệp manifest  Tại cửa sổ lệnh Cloud9, tạo một thư mục tên static-provision/kube-manifest.  mkdir -p static-provision/kube-manifest\rls\rls static-provision Tạo một tệp tên pv.yaml bên trong static-provision/kube-manifest.  touch static-provision/kube-manifest/pv.yaml Mở tệp pv.yaml, dán đoạn mã code dưới đây.  apiVersion: v1\rkind: PersistentVolume\rmetadata:\rname: test-pv\rspec:\raccessModes:\r- ReadWriteOnce\rcapacity:\rstorage: 10Gi\rcsi:\rdriver: ebs.csi.aws.com\rfsType: ext4\rvolumeHandle: \u0026lt;REPLACE-WITH-YOUR-VOLUME-ID\u0026gt; 4.Thay thế với Volume ID của bạn tại volumeHandle. Sau đó lưu lại. Tạo một tệp tên pv-claim.yaml bên trong static-provision/kube-manifest.  touch static-provision/kube-manifest/pv-claim.yaml Mở tệp pv-claim.yaml, dán đoạn mã code dưới đây. Sau đó lưu lại.  apiVersion: v1\rkind: PersistentVolumeClaim\rmetadata:\rname: ebs-claim\rspec:\rstorageClassName: \u0026#34;\u0026#34; # Empty string must be explicitly set otherwise default StorageClass will be set\rvolumeName: test-pv\raccessModes:\r- ReadWriteOnce\rresources:\rrequests:\rstorage: 10Gi Tạo một tệp tên pod.yaml bên trong static-provision/kube-manifest.  touch static-provision/kube-manifest/pod.yaml Mở tệp pod.yaml, dán đoạn mã code bên dưới. Sau đó lưu lại.  apiVersion: v1\rkind: Pod\rmetadata:\rname: app\rspec:\rcontainers:\r- name: app\rimage: centos\rcommand: [\u0026#34;/bin/sh\u0026#34;]\rargs: [\u0026#34;-c\u0026#34;, \u0026#34;while true; do echo $(date -u) \u0026gt;\u0026gt; /data/out.txt; sleep 5; done\u0026#34;]\rvolumeMounts:\r- name: persistent-storage\rmountPath: /data\rvolumes:\r- name: persistent-storage\rpersistentVolumeClaim:\rclaimName: ebs-claim Triển khai tài nguyên  Tại cửa sổ lệnh Cloud9, thực thi câu lệnh dưới đây.  kubectl apply -f static-provision/kube-manifest Kiểm tra kết quả  Liệt kê Persistent Volume (PV).  kubectl get pv Có một PV tên test-pv với dung lượng là 10GB.\nLiệt kê Persistent Volume Claim (PVC).  kubectl get pvc Có một PVC tên ebs-claim, trạng thái là BOUND, ổ đĩa là test-pv và dung lượng là 10GB.\nLiệt kê Pod.  kubectl get pod Có một Pod tên app với trạng thái là Running.\nChúng ta sẽ xác minh Pod viết dữ liệu vào ổ đĩa được cung cấp tĩnh thành công.  kubectl exec app -- cat /data/out.txt Có nhiều dữ liệu được viết vào tệp /data/out.txt. Hãy lưu lại nội dung của ba dữ liệu đầu tiên để so sánh sau. Trong trường hợp này là Mon May 6 17:15:04 UTC 2024, Mon May 6 17:15:09 UTC 2024 và Mon May 6 17:15:14 UTC 2024.\nBây giờ, chúng ta sẽ xóa Pod sau đó tạo lại một cái khác để kiểm tra dữ liệu trong ổ đĩa EBS đã được cố định với Pod mới.\nXóa Pod hiện tại.  kubectl delete pod app 6. Liệt kê tất cả các Pod lần nữa để đảm bảo Pod đã được xóa\nkubectl get pod Tạo một Pod mới.  kubectl apply -f static-provision/kube-manifest Liệt kê Pod vừa tạo.  kubectl get pod Xác minh dữ liệu trong /data/out.txt lần nữa.  kubectl exec app -- cat /data/out.txt Bạn có thể thấy, ba dữ liệu đầu tiên trong /data/out.txt hiện vẫn là Mon May 6 17:15:04 UTC 2024, Mon May 6 17:15:09 UTC 2024 và Mon May 6 17:15:14 UTC 2024. Dữ liệu được giữ nguyên trong khi Pod được thay thế bằng cái khác.\nDọn dẹp  Thực thi câu lệnh dưới để xóa tất cả tài nguyến.  kubectl delete -f static-provision/kube-manifest Xác minh rằng tất cả các tài nguyên đã được xóa thành công.  kubectl get pv,pvc,pod Tất cả đã được xóa.\n Đi đến EBS Volume để xóa ổ đĩa tên fcj-ebs-strorage-eks.\n  Chọn ổ đĩa tên fcj-ebs-strorage-eks.\n  Nhấn Actions.\n  Nhấn Delete volume   Nhập delete để xác nhận.\n  Sau đó, nhấn Delete.   "
},
{
	"uri": "/vi/2-prerequiste/2.2-modifyiamrole/",
	"title": "Cấu hình IAM role",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ tạo một IAM Role và gán nó cho máy chủ làm việc.\nTạo IAM role   Nhấn IAM để chuyển hướpg đến dịch vụ IAM.\n  Nhấn Role.\n  Nhấn Create role.   Ở mục Trusted entity type, chọn AWS service.\n  Ở mục Service or use case, chọn EC2.   Sau đó, nhấn Next.   Ở mục Permissions policies, chọn policy tên AdministratorAccess.   Sau đó, nhấn Next.   Tại trang Name, review, and create, nhập eksworkspace-administrator ở mục Role name .   Sau đó, cuộn xuống cuối trang và nhấn Create role.   Gán role cho máy chủ làm việc   Tại trang AWS Cloud9, nhấn Manage EC2 instance.   Bạn sẽ thấy máy chủ làm việc đã được tạo. Sau đó, nhấn chọn nó.\n  Nhấn Action.\n  Nhấn Security.\n  Nhấn Modify IAM role.   Chọn Role eksworkspace-administrator vừa được tạo ở bước trên.\n  Sau đó, nhấn Update IAM role.   IAM Role mới đã được cập nhật thành công.   Cập nhật cấu hình Cloud9 Cloud9 sẽ quản lý thông tin xác thực IAM tự dộng. Cấu hình mặc định này hiện không phù hợp với xác thực EKS thông qua IAM, chúng ta sẽ cần phải vô hiệu hóa tính năng này và sử dụng IAM Role.\n\r  Tại trang AWS Cloud9, nhấn AWS Cloud9.\n  Chọn Preferences.   Tại mục AWS Settings, vô hiệu hóa AWS managed temporary credentials.   Để đảm bảo rằng các thông tin xác thực tạm thời không còn lưu trữ trong Cloud9, chúng ta sẽ xóa tất cả thông tin xác thực đang tồn tại với dòng lệnh bên dưới.\n  rm -vf ${HOME}/.aws/credentials "
},
{
	"uri": "/vi/4-eksstoragewithefs/4.2-createefs/",
	"title": "Tạo EFS File System",
	"tags": [],
	"description": "",
	"content": "Amazon EFS CSI driver hổ trợ cung cấp động và tĩnh. Hiện tại, Cung cấp động tạo một điểm truy cập cho mỗi PV. Điều này có nghĩa là một Amazon EFS phải được tạo thủ công trên AWS trước tiên và nên được cung cấp như dữ liệu đầu vào cho thông số của Storage Class. Với cung cấp tĩnh, Amazon EFS cần được tạo thử công trên AWS trước. Sau đó, nó có thể được gắn vào bên trong một container như là một ổ đĩa sử dụng trình điều khiển.\nTạo Security Group  Truy xuất ID của VPC chứa cụm của bạn và lưu trữ nó trong một biến để sử dụng ở bước sau.  vpc_id=$(aws eks describe-cluster \\\r--name fcj-storage-cluster \\\r--query \u0026#34;cluster.resourcesVpcConfig.vpcId\u0026#34; \\\r--output text)\recho $vpc_id Truy xuất phạm vi CIDR cho VPC của cụm của bạn và lưu trữ nó trong một biến để sử dụng ở bước sau.  cidr_range=$(aws ec2 describe-vpcs \\\r--vpc-ids $vpc_id \\\r--query \u0026#34;Vpcs[].CidrBlock\u0026#34; \\\r--output text \\\r--region ap-southeast-1)\recho $cidr_range Bây giờ chúng ta sẽ tạo một Security Group với quy tắc đầu vào cho phép truy cập đầu vào với lưu lượng NFS cho EFS của bạn.\nTạo một Security Group.  security_group_id=$(aws ec2 create-security-group \\\r--group-name MyEfsSecurityGroup \\\r--description \u0026#34;My EFS security group\u0026#34; \\\r--vpc-id $vpc_id \\\r--output text) Tạo một quy tắc đầu vào mà cho phép lưu lượng đầu vào NFS từ CIDR của VPC Cluster.  aws ec2 authorize-security-group-ingress \\\r--group-id $security_group_id \\\r--protocol tcp \\\r--port 2049 \\\r--cidr $cidr_range Tạo EFS File System  Tạo một File System.  file_system_id=$(aws efs create-file-system \\\r--region ap-southeast-1 \\\r--performance-mode generalPurpose \\\r--query \u0026#39;FileSystemId\u0026#39; \\\r--output text)\recho $file_system_id Đi đến EFS để xác minh.  Có một File System được tạo với File system ID khớp với giá trị của file_system_id.\nNhấn vào EFS File System.   Bây giờ chúng ta sẽ tạo Mount Target.\n Chuyển đến thanh chuyển hướng Network. Chưa có Mount Target được tạo.\n  Xác minh địa chỉ IP của Node.\n  kubectl get nodes Trong trường hợp này, địa chỉ IP của Node là 192.168.18.22.\nXác minh ID của Subnet trong VPC và Availability Zone nào chứa Subnet.  aws ec2 describe-subnets \\\r--region ap-southeast-1 \\\r--filters \u0026#34;Name=vpc-id,Values=$vpc_id\u0026#34; \\\r--query \u0026#39;Subnets[*].{SubnetId: SubnetId,AvailabilityZone: AvailabilityZone,CidrBlock: CidrBlock}\u0026#39; \\\r--output table Cluster node với IP là 192.168.18.22 thuộc CIDR Block 192.168.0.0/19 và SubnetId subnet-0a75ff93096b88a38.\nThêm Mount Target cho Subnet của Node. Thay thế với subnet-id.  aws efs create-mount-target \\\r--file-system-id $file_system_id \\\r--subnet-id subnet-0a75ff93096b88a38 \\\r--security-groups $security_group_id Đi đến thanh chuyển hướng Network của EFS để kiểm tra Mount Target.   Có một Mount Target mới được tạo.\nBạn đã vừa tạo EFS File System và Mount Target thành công. "
},
{
	"uri": "/vi/3-eksstoragewithebs/",
	"title": "Bộ lưu trữ cố định Amazon EKS với Amazon EBS",
	"tags": [],
	"description": "",
	"content": "Tổng quan Amazon Elastic Block Store là một dịch vụ lưu trữ dạng khối hiệu năng cao, có khả năng mở rộng, dễ dàng sử dụng. Nó cũng cấp vùng lưu trữ liên tục đến người dùng. Bộ lưu trữ liên tục cho phép người dùng lưu trữ dữ liệu của họ cho đến khi họ quyết định xóa các dữ liệu đó.\nNội dung  3.1 Cài đặt EBS CSI Driver 3.2 Cung cấp tĩnh 3.3 Cung cấp động  "
},
{
	"uri": "/vi/4-eksstoragewithefs/4.3-staticprovision/",
	"title": "Cung cấp tĩnh",
	"tags": [],
	"description": "",
	"content": "Lưu trữ các tài nguyên hiện tại.  Tạo một thư mục tên EBS để lưu trữ các tài nguyên của phần EBS.  mkdir EBS Di chuyển tất cả các thư mục dynamic-provision và static-provision đến thư mục EBS.  mv dynamic-provision EBS\rmv static-provision EBS Tạo các tệp Manifest.  Tạo thư mục tên EFS để lưu trữ các tệp kube-manifest.  mkdir EFS Tạo thư mục cho phần Static Provisioning.  mkdir -p EFS/static-provision/kube-manifest\rls EFS/static-provision Tạo tệp tên storageclass.yaml bên trong static-provision/kube-manifest.  touch EFS/static-provision/kube-manifest/storageclass.yaml Mở tệp storageclass.yaml, dán đoạn mã code bên dưới.  apiVersion: storage.k8s.io/v1\rkind: StorageClass\rmetadata:\rname: efs-sc\rprovisioner: efs.csi.aws.com Tạo một tệp tên pv.yaml bên trong static-provision/kube-manifest.  touch EFS/static-provision/kube-manifest/pv.yaml Mở tệp pv.yaml, dán đoạn mã code bên dưới. Nhập EFS File System ID của bạn tại volumeHandle.  apiVersion: v1\rkind: PersistentVolume\rmetadata:\rname: efs-pv\rspec:\rcapacity:\rstorage: 5Gi\rvolumeMode: Filesystem\raccessModes:\r- ReadWriteOnce\rstorageClassName: efs-sc\rpersistentVolumeReclaimPolicy: Retain\rcsi:\rdriver: efs.csi.aws.com\rvolumeHandle: fs-0db5cdf65fc6c821d Tạo tệp tên pvc.yaml bên trong static-provision/kube-manifest.  touch EFS/static-provision/kube-manifest/pvc.yaml Mở tệp pvc.yaml, dán đoạn mã code bên dưới.  apiVersion: v1\rkind: PersistentVolumeClaim\rmetadata:\rname: efs-claim\rspec:\raccessModes:\r- ReadWriteOnce\rstorageClassName: efs-sc\rresources:\rrequests:\rstorage: 5Gi Tạo một tệp tên pod.yaml bên trong static-provision/kube-manifest.  touch EFS/static-provision/kube-manifest/pod.yaml Mở tệp pod.yaml, dán đoạn mã code bên dưới.  apiVersion: v1\rkind: Pod\rmetadata:\rname: efs-app\rspec:\rcontainers:\r- name: app\rimage: centos\rcommand: [\u0026#34;/bin/sh\u0026#34;]\rargs: [\u0026#34;-c\u0026#34;, \u0026#34;while true; do echo $(date -u) \u0026gt;\u0026gt; /data/out.txt; sleep 5; done\u0026#34;]\rvolumeMounts:\r- name: persistent-storage\rmountPath: /data\rvolumes:\r- name: persistent-storage\rpersistentVolumeClaim:\rclaimName: efs-claim Triển khai tài nguyên  Thực thi câu lệnh bên dưới để triển khai tài nguyên.  kubectl apply -f EFS/static-provision/kube-manifest Liệt kê tất cả tài nguyên đã được tạo.  kubectl get sc,pv,pvc,pod STATUS của Persistent Volume (pv) và Persistent Volume Claim (pvc) phải là Bound, và của Pod phải là Running.\n\rKiểm tra kết quả.  Thực thi câu lệnh dưới để xác minh rằng dữ liệu đã được ghi vào EFS filesystem.  kubectl exec -ti efs-app -- head /data/out.txt Có nhiều dữ liệu được viết vào tệp /data/out.txt. Hãy lưu lại nội dung của ba dữ liệu đầu tiên để so sánh sau. Trong trường hợp này là Wed May 8 11:31:17 UTC 2024, Wed May 8 11:31:22 UTC 2024 và Wed May 8 11:31:27 UTC 2024.\nBây giờ chúng ta sẽ xóa Pod hiện tại. Sau đó liệt kê tất cả các tài nguyên lần nữa để đảm bảo Pod đã được xóa.  kubectl delete pod efs-app\rkubectl get sc,pv,pvc,pod Pod efs-app đã được xóa.\nTạo một Pod mới.  kubectl apply -f EFS/static-provision/kube-manifest/pod.yaml\rkubectl get pod 4. Xác minh dữ liệu bên trong /data/out.txt lần nữa.\nkubectl exec -ti efs-app -- head /data/out.txt Bạn có thể thấy, ba dữ liệu đầu tiên trong /data/out.txt hiện vẫn là Wed May 8 11:31:17 UTC 2024, Wed May 8 11:31:22 UTC 2024 và Wed May 8 11:31:27 UTC 2024. Dữ liệu được giữ nguyên trong khi Pod được thay thế bằng cái khác.\nDọn dẹp  Thực thi câu lệnh bên dưới để xóa tất cả tài nguyên.  kubectl delete -f EFS/static-provision/kube-manifest Xác minh tất cả tài nguyên đã được xóa thành công.  kubectl get sc,pv,pvc,pod Tất cả đã được xóa.\n"
},
{
	"uri": "/vi/3-eksstoragewithebs/3.3-dynamicprovision/",
	"title": "Cung cấp động",
	"tags": [],
	"description": "",
	"content": "Tạo các tệp manifest  Tại cửa sổ lệnh Cloud9, tạo một thư mục tên dynamic-provision/kube-manifest.  mkdir -p dynamic-provision/kube-manifest Tạo một tệp tên storageclass.yaml bên trong dynamic-provision/kube-manifest.  touch dynamic-provision/kube-manifest/storageclass.yaml Mở tệp storageclass.yaml, dán đoạn mã code bên dưới. Sau đó lưu lại.  apiVersion: storage.k8s.io/v1\rkind: StorageClass\rmetadata:\rname: ebs-sc\rprovisioner: ebs.csi.aws.com\rvolumeBindingMode: WaitForFirstConsumer Tạo một tệp tên pv-claim.yaml bên trong dynamic-provision/kube-manifest.  touch dynamic-provision/kube-manifest/pv-claim.yaml Mở tệp pv-claim.yaml, dán đoạn mã code bên dưới. Sau đó lưu lại.  apiVersion: v1\rkind: PersistentVolumeClaim\rmetadata:\rname: ebs-claim\rspec:\raccessModes:\r- ReadWriteOnce\rstorageClassName: ebs-sc\rresources:\rrequests:\rstorage: 10Gi Tạo một tệp tên pod.yaml bên trong dynamic-provision/kube-manifest.  touch dynamic-provision/kube-manifest/pod.yaml Mở tệp pod.yaml, dán đoạn mã code bên dưới. Sau đó lưu lại.  apiVersion: v1\rkind: Pod\rmetadata:\rname: app\rspec:\rcontainers:\r- name: app\rimage: centos\rcommand: [\u0026#34;/bin/sh\u0026#34;]\rargs: [\u0026#34;-c\u0026#34;, \u0026#34;while true; do echo $(date -u) \u0026gt;\u0026gt; /data/out.txt; sleep 5; done\u0026#34;]\rvolumeMounts:\r- name: persistent-storage\rmountPath: /data\rvolumes:\r- name: persistent-storage\rpersistentVolumeClaim:\rclaimName: ebs-claim Triển khai tài nguyên  Tại cửa sổ lệnh Cloud9, thực thi câu lệnh dưới.  kubectl apply -f dynamic-provision/kube-manifest Kiểm tra kết quả  Liệt kê tất cả tài nguyên đã tạo.  kubectl get sc,pvc,pod Có một Pod tên app với trạng thái là Running, một Persistent Volume Claim tên ebs-claim với trạng thái là Bound là dung lượng là 10Gi và một Storage Class tên ebs-sc với Provider là ebs.csi.aws.com. Storage Class sẽ tự động tạo một EBS Volume với kích cỡ ổ đĩa được định nghĩa tại spec.resources.requests.storage (10Gi)..\nĐi đến EBS Volume để kiểm tra kết quả.   Có một EBS Volume mới với Availability Zone giống với của Node.\nChúng ta sẽ xác minh Pod viết dữ liệu vào ổ đĩa được cung cấp động thành công.  kubectl exec app -- cat /data/out.txt Có nhiều dữ liệu được viết vào tệp /data/out.txt. Hãy lưu lại nội dung của ba dữ liệu đầu tiên để so sánh sau. Trong trường hợp này là Mon May 6 19:58:43 UTC 2024, Mon May 6 19:58:48 UTC 2024 và Mon May 6 19:58:53 UTC 2024.\nBây giờ, chúng ta sẽ xóa Pod sau đó tạo lại một cái khác để kiểm tra dữ liệu trong ổ đĩa EBS đã được cố định với Pod mới.\nXóa Pod hiện tại app.  kubectl delete pod app 5. Liệt kê tất cả các Pod để đảm bảo rằng chúng đã được xóa.\nkubectl get pod 6. Tạo một Pod mới.\nkubectl apply -f dynamic-provision/kube-manifest 7. Liệt kê Pod đã tạo.\nkubectl get pod 8. Xác minh dữ liệu bên trong /data/out.txt lần nữa.\nkubectl exec app -- cat /data/out.txt Bạn có thể thấy, ba dữ liệu đầu tiên trong /data/out.txt hiện vẫn là Mon May 6 19:58:43 UTC 2024, Mon May 6 19:58:48 UTC 2024 và Mon May 6 19:58:53 UTC 2024. Dữ liệu được giữ nguyên trong khi Pod được thay thế bằng cái khác.\nDọn dẹp  Thực thi câu lệnh bên dưới để xóa tất cả tài nguyên đã tạo.  kubectl delete -f dynamic-provision/kube-manifest Kiểm tra tất cả tài nguyên đã được xóa thành công.  kubectl get sc,pvc,pod Tất cả đã được xóa. Bởi vì Amazon EBS Volume được tạo tĩnh bởi Storage Class. Nên khi Storage Class bị xóa, Amazon EBS Volume cũng sẽ bị loại bỏ.\nĐi đến EBS Volume để kiểm tra kết quả.   Amazon EBS Volume đã bị loại bỏ.\n"
},
{
	"uri": "/vi/2-prerequiste/2.3-installation/",
	"title": "Cài đặt công cụ",
	"tags": [],
	"description": "",
	"content": "Trong bài thực hành này, chúng ta sẽ cài đặt các công cụ cần thiết: awscli, kubectl và eksctl.\nNâng cấp awscli  Sao chép và dán dòng lệnh dưới đây vào cửa sổ lệnh Cloud8 để nâng cấp awscli.  sudo pip install --upgrade awscli \u0026amp;\u0026amp; hash -r Cài đặt kubectl  Tại cửa sổ lệnh Cloud9, thực hiện câu lệnh này để cài đặt kubectl.   Nâng cấp các gói tin trong máy chủ.  sudo yum update  Cài đặt kubectl.  curl -LO https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl Kiểm tra phiên bản của kubectl.  kubectl version --client Cài đặt eksctl  Tại cửa sổ lệnh Cloud9, thực hiện câu lệnh này để cài đặt eksctl.   Tải xuống và giải nén bản phát hành mới nhất của eksctl bằng lệnh sau.  curl --silent --location \u0026#34;https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\u0026#34; | tar xz -C /tmp  Di chuyển nhị phân được trích xuất sang /usr/local/bin.  sudo mv /tmp/eksctl /usr/local/bin  Kiểm thử việc cài đặt đã thành công bằng câu lệnh  eksctl version "
},
{
	"uri": "/vi/4-eksstoragewithefs/",
	"title": "Bộ lưu trữ cố định Amazon EKS với Amazon EFS",
	"tags": [],
	"description": "",
	"content": "Overview Amazon Elastic File System là một hệ thống tệp đàn hồi đơn giản, không có máy chủ, có thể cài đặt và quên để sử dụng với các dịch vụ Đám mây AWS và tài nguyên tại chỗ. Nó được xây dựng để mở rộng quy mô theo yêu cầu lên tới petabyte mà không làm gián đoạn ứng dụng, tự động tăng và thu nhỏ khi bạn thêm và xóa tệp, loại bỏ nhu cầu cung cấp và quản lý dung lượng để đáp ứng sự tăng trưởng.\nContent  4.1 Cài đặt EFS CSI Driver 4.2 Tạo EFS File System 4.3 Cung cấp tĩnh 4.4 Cung cấp động  "
},
{
	"uri": "/vi/4-eksstoragewithefs/4.4-dynamicprovision/",
	"title": "Cung cấp động",
	"tags": [],
	"description": "",
	"content": "Tạo các tệp Manifest  Tạo thư mục cho phần Dynamic Provisioning.  mkdir -p EFS/dynamic-provision/kube-manifest\rls EFS/dynamic-provision Tạo tệp tên storageclass.yaml bên trong dynamic-provision/kube-manifest.  touch EFS/dynamic-provision/kube-manifest/storageclass.yaml Mở tệp storageclass.yaml, dán đoạn mã code bên dưới. Thay thế với EFS File System ID tại mục fileSystemId.  kind: StorageClass\rapiVersion: storage.k8s.io/v1\rmetadata:\rname: efs-sc\rprovisioner: efs.csi.aws.com\rparameters:\rprovisioningMode: efs-ap\rfileSystemId: fs-0db5cdf65fc6c821d\rdirectoryPerms: \u0026#34;700\u0026#34; Tạo tệp tên pvc.yaml bên trong dynamic-provision/kube-manifest.  touch EFS/dynamic-provision/kube-manifest/pvc.yaml Mở tệp pvc.yaml, dán đoạn mã code bên dưới.  apiVersion: v1\rkind: PersistentVolumeClaim\rmetadata:\rname: efs-claim\rspec:\raccessModes:\r- ReadWriteMany\rstorageClassName: efs-sc\rresources:\rrequests:\rstorage: 5Gi Tạo tệp tên pod.yaml bên trong dynamic-provision/kube-manifest.  touch EFS/dynamic-provision/kube-manifest/pod.yaml Mở tệp pod.yaml , dán đoạn mã code bên dưới.  apiVersion: v1\rkind: Pod\rmetadata:\rname: efs-app\rspec:\rcontainers:\r- name: app\rimage: centos\rcommand: [\u0026#34;/bin/sh\u0026#34;]\rargs: [\u0026#34;-c\u0026#34;, \u0026#34;while true; do echo $(date -u) \u0026gt;\u0026gt; /data/out; sleep 5; done\u0026#34;]\rvolumeMounts:\r- name: persistent-storage\rmountPath: /data\rvolumes:\r- name: persistent-storage\rpersistentVolumeClaim:\rclaimName: efs-claim Triển khai tài nguyên  Thực thi câu lệnh bên dưới để triển khai tài nguyên.  kubectl apply -f EFS/dynamic-provision/kube-manifest Liệt kê tất cả tài nguyên đã được tạo.  kubectl get sc,pvc,pod STATUS của Persistent Volume Claim (pvc) phải là Bound, và của Pod phải là Running.\n\r Đi đến EFS.\n  Nhấn vào EFS File System của bạn.   Chuyển để thanh chuyển hướng Access points.   Bạn có thể thấy có một Access point vừa được tạo bới vì bạn đã chỉ định parameters.provisioningMode là efs-ap trong tệp storageclass.yaml.\nKiểm tra kết quả.  Thực thi câu lệnh dưới để xác minh rằng dữ liệu đã được ghi vào EFS filesystem.  kubectl exec efs-app -- bash -c \u0026#34;cat data/out\u0026#34; Có nhiều dữ liệu được viết vào tệp /data/out. Hãy lưu lại nội dung của ba dữ liệu đầu tiên để so sánh sau. Trong trường hợp này là Wed May 8 17:52:02 UTC 2024, Wed May 8 17:52:07 UTC 2024 và Wed May 8 17:52:12 UTC 2024.\nBây giờ chúng ta sẽ xóa Pod hiện tại. Sau đó liệt kê tất cả các tài nguyên lần nữa để đảm bảo Pod đã được xóa.  kubectl delete pod efs-app\rkubectl get sc,pvc,pod Pod efs-app đã bị xóa.\nTạo một Pod mới.  kubectl apply -f EFS/dynamic-provision/kube-manifest/pod.yaml\rkubectl get pod Xác minh dữ liệu bên trong /data/out lần nữa.  kubectl exec efs-app -- bash -c \u0026#34;cat data/out\u0026#34; Bạn có thể thấy, ba dữ liệu đầu tiên trong /data/out hiện vẫn là Wed May 8 17:52:02 UTC 2024, Wed May 8 17:52:07 UTC 2024 và Wed May 8 17:52:12 UTC 2024. Dữ liệu được giữ nguyên trong khi Pod được thay thế bằng cái khác.\nDọn dẹp  Thực thi câu lệnh bên dưới để xóa tất cả tài nguyên.  kubectl delete -f EFS/dynamic-provision/kube-manifest 2. Xác minh tất cả tài nguyên đã được xóa thành công.\nkubectl get sc,pvc,pod  Đi đến EFS.\n  Chọn EFS File System của bạn.\n  Nhấn Delete.   Nhập EFS File System ID để xác nhận.\n  Nhấn Confirm để xóa.\n  "
},
{
	"uri": "/vi/2-prerequiste/2.4-createekscluster/",
	"title": "Tạo Amazon EKS Cluster",
	"tags": [],
	"description": "",
	"content": "Ở bước trước đó, chúng ta đã cài đặt các công cụ cần thiết: awscli, kubectl và eksctl. Bây giờ chúng ta sẽ tạo một Amazon EKS Cluster với managed Node Group là EC2 Instance.\nTạo Amazon EKS Cluster.  Tại cửa sổ lệnh Cloud9, thực hiện câu lệnh này để tạo một Amazon EKS Cluster.  eksctl create cluster --name=fcj-storage-cluster --region=ap-southeast-1 --zones=ap-southeast-1a,ap-southeast-1b --without-nodegroup Sau đó, kiểm tra Cluster bằng câu lệnh.  eksctl get cluster --region=ap-southeast-1 Cho phép kubectl giao tiếp với cluster của bạn bằng việc thêm chuỗi này vào tệp kubectl config.  aws eks update-kubeconfig --region=ap-southeast-1 --name=fcj-storage-cluster Sau đó, xác nhận giao tiếp với cluster của bạn bằng câu lệnh.  kubectl get svc Chú ý: Kết quả mong đợi là sự xuất hiện của dịch vụ ClusterIP\nTạo và liên kết IAM OIDC Provider cho EKS Cluster. IAM OpenID Connect (OIDC) Provider giúp sử dụng một số tiện ích của Amazon EKS, hoặc cho phép khối lượng công việc riêng lẻ Kubernetes có các quyền AWS Identity and Access Management (IAM) cụ thể.\n Tại cửa sổ lệnh Cloud9, thực hiện câu lệnh này để tạo và liên kết một OIDC Provider tới Amazon EKS Cluster.  eksctl utils associate-iam-oidc-provider --cluster=fcj-storage-cluster --region=ap-southeast-1 --approve Để xác nhận OIDC Provider đã tạo, đi đến IAM. Chuyển đến mục Identity providers. Bạn sẽ thấy có một Provider được tạo  Tạo Amazon EKS managed Node Group.  Tại cửa sổ lệnh Cloud9, thực hiện câu lệnh này để tạo managed Node Group và liên kết nó tới EKS Cluster.  eksctl create nodegroup --name=fcj-storage-nodegroup --cluster=fcj-storage-cluster --region=ap-southeast-1 --node-type=t3.medium --nodes=1  Sẽ mất khoảng 15 phút để hoàn thành quy trình này.   Liệt kê tất cả các node trong cluster.\n  kubectl get nodes "
},
{
	"uri": "/vi/5-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Xóa EKS Cluster  Thực hiện câu lệnh dưới để xóa EKS cluster.  eksctl delete cluster --name fcj-storage-cluster --region ap-southeast-1 Sẽ mất khoảng 20 phút để hoàn thành việc xóa\n\rXóa Cloud9 Workspace  Đi đến Cloud9. Chọn FCJ-Workspace. Nhấn Delete.  Nhập Delete để xác nhận. Nhấn Delete.   Xóa IAM Role  Xóa IAM Role tên AmazonEKS_EFS_CSI_DriverRole.   "
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]